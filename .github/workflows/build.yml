name: Build
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"
      - name: Debug
        run: |
          echo "Testing connectivity to SonarQube server..."
          curl -v ${{ secrets.SONAR_HOST_URL }}
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=JMemorize
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     permissions: read-all
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
#       - name: sonarqube-scan
#         uses: sonarsource/sonarqube-scan-action@master
#         with:
#           projectBaseDir: ./src
#           args: >
#             -Dsonar.projectKey=JMemorize
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#       # If you wish to fail your job when the Quality Gate is red, uncomment the
#       # following lines. This would typically be used to fail a deployment.
#       # - uses: sonarsource/sonarqube-quality-gate-action@master
#       #   timeout-minutes: 5
#       #   env:
#       #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
